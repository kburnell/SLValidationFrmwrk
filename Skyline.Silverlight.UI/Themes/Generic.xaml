<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:Skyline.Silverlight.UI.Controls"
    xmlns:toolkit="clr-namespace:Skyline.Silverlight.UI.Toolkit"    
    >


    <Style TargetType="local:ToggleArrow">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:ToggleArrow">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:ChildWindowContent">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:ChildWindowContent">
                    <Border Margin="-900, -600, -900, -600" Background="#20404040">
                        <Border Margin="900, 600, 900, 600">
                            <ContentPresenter x:Name="Content" Cursor="{TemplateBinding Cursor}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:ChangeState">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:ChangeState">
                    <Border />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:RotatingPanel">
        <Setter Property="BorderBrush" Value="#FF000000" />
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush  StartPoint="0.5,0" EndPoint="0.5,1">
                    <GradientStop Color="#FFFFFFFF" Offset="0"/>
                    <GradientStop Color="#FFFFFFFF" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="HeaderForeground" Value="#FFFFFFFF" />
        <Setter Property="HeaderForegroundShadow" Value="#E0000000" />
        <Setter Property="HeaderBackground">
            <Setter.Value>
                <LinearGradientBrush  StartPoint="0,0" EndPoint="0,1">
                    <GradientStop Color="#FF222222" Offset="0"/>
                    <GradientStop Color="Transparent" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="DisabledHeaderForeground" Value="#FF000000" />
        <Setter Property="DisabledLeftHeaderBackground">
            <Setter.Value>
                <LinearGradientBrush  StartPoint="0.5,0" EndPoint="0.5,1">
                    <GradientStop Color="Transparent" Offset="0"/>
                    <GradientStop Color="#C0FFFFFF" Offset="0.5"/>
                    <GradientStop Color="#E0FFFFFF" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="DisabledRightHeaderBackground">
            <Setter.Value>
                <LinearGradientBrush  StartPoint="0.5,0" EndPoint="0.5,1">
                    <GradientStop Color="#E0FFFFFF" Offset="0"/>
                    <GradientStop Color="#C0FFFFFF" Offset="0.5"/>
                    <GradientStop Color="Transparent" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:RotatingPanel">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="PositionStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="LeftState" GeneratedDuration="0" To="CenterState">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0" To="0" Storyboard.TargetProperty="(UIElement.Projection).(PlaneProjection.CenterOfRotationX)" Storyboard.TargetName="BorderBackground" />
                                            <DoubleAnimation Duration="0:0:0" To="0" Storyboard.TargetProperty="(UIElement.Projection).(PlaneProjection.CenterOfRotationX)" Storyboard.TargetName="ImageReflection" />
                                            <DoubleAnimation Duration="0:0:0.36" To="0" Storyboard.TargetProperty="(UIElement.Projection).(PlaneProjection.RotationY)" Storyboard.TargetName="BorderBackground">
                                                <DoubleAnimation.EasingFunction>
                                                    <CubicEase EasingMode="EaseInOut" />
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                            <DoubleAnimation Duration="0:0:0.36" To="0" Storyboard.TargetProperty="(UIElement.Projection).(PlaneProjection.RotationY)" Storyboard.TargetName="ImageReflection">
                                                <DoubleAnimation.EasingFunction>
                                                    <CubicEase EasingMode="EaseInOut" />
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition From="RightState" GeneratedDuration="0" To="CenterState">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0" To="1" Storyboard.TargetProperty="(UIElement.Projection).(PlaneProjection.CenterOfRotationX)" Storyboard.TargetName="BorderBackground" />
                                            <DoubleAnimation Duration="0:0:0" To="1" Storyboard.TargetProperty="(UIElement.Projection).(PlaneProjection.CenterOfRotationX)" Storyboard.TargetName="ImageReflection" />
                                            <DoubleAnimation Duration="0:0:0.36" To="0" Storyboard.TargetProperty="(UIElement.Projection).(PlaneProjection.RotationY)" Storyboard.TargetName="BorderBackground">
                                                <DoubleAnimation.EasingFunction>
                                                    <CubicEase EasingMode="EaseInOut" />
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                            <DoubleAnimation Duration="0:0:0.36" To="0" Storyboard.TargetProperty="(UIElement.Projection).(PlaneProjection.RotationY)" Storyboard.TargetName="ImageReflection">
                                                <DoubleAnimation.EasingFunction>
                                                    <CubicEase EasingMode="EaseInOut" />
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="CenterState">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0" To="0.36" Storyboard.TargetProperty="(UIElement.Projection).(PlaneProjection.CenterOfRotationX)" Storyboard.TargetName="BorderBackground" />
                                        <DoubleAnimation Duration="0:0:0" To="0.36" Storyboard.TargetProperty="(UIElement.Projection).(PlaneProjection.CenterOfRotationX)" Storyboard.TargetName="ImageReflection" />
                                        <DoubleAnimation Duration="0:0:0" To="0" Storyboard.TargetProperty="(UIElement.Projection).(PlaneProjection.RotationY)" Storyboard.TargetName="BorderBackground" />
                                        <DoubleAnimation Duration="0:0:0" To="0" Storyboard.TargetProperty="(UIElement.Projection).(PlaneProjection.RotationY)" Storyboard.TargetName="ImageReflection" />
                                        <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CanvasLeft" />
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CanvasLeft">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.2">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CanvasRight" />
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CanvasRight">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.2">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BorderLeft" />
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="BorderLeft">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.2">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BorderRight" />
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="BorderRight">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.2">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="LeftState">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.3" To="-60" Storyboard.TargetProperty="(UIElement.Projection).(PlaneProjection.RotationY)" Storyboard.TargetName="BorderBackground">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseInOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Duration="0:0:0.3" To="-60" Storyboard.TargetProperty="(UIElement.Projection).(PlaneProjection.RotationY)" Storyboard.TargetName="ImageReflection">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseInOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Duration="0:0:0" To="0" Storyboard.TargetProperty="(UIElement.Projection).(PlaneProjection.CenterOfRotationX)" Storyboard.TargetName="BorderBackground" />
                                        <DoubleAnimation Duration="0:0:0" To="0" Storyboard.TargetProperty="(UIElement.Projection).(PlaneProjection.CenterOfRotationX)" Storyboard.TargetName="ImageReflection" />
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="BorderCenter">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="BorderOffCenterEffect">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0:0:0.2" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CanvasLeft" />
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CanvasLeft">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0:0:0.2" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BorderLeft" />
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="BorderLeft">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="RightState">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0" To="1" Storyboard.TargetProperty="(UIElement.Projection).(PlaneProjection.CenterOfRotationX)" Storyboard.TargetName="BorderBackground" />
                                        <DoubleAnimation Duration="0:0:0" To="1" Storyboard.TargetProperty="(UIElement.Projection).(PlaneProjection.CenterOfRotationX)" Storyboard.TargetName="ImageReflection" />
                                        <DoubleAnimation Duration="0:0:0.3" To="60" Storyboard.TargetProperty="(UIElement.Projection).(PlaneProjection.RotationY)" Storyboard.TargetName="BorderBackground">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseInOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Duration="0:0:0.3" To="60" Storyboard.TargetProperty="(UIElement.Projection).(PlaneProjection.RotationY)" Storyboard.TargetName="ImageReflection">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseInOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="BorderCenter">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="BorderOffCenterEffect">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0:0:0.2" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CanvasRight" />
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CanvasRight">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0:0:0.2" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BorderRight" />
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="BorderRight">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="NormalStates">
                                <VisualState x:Name="NormalState">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.13" To="1" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="BorderBackground" />
                                        <DoubleAnimation Duration="0:0:0.13" To="1" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="ImageReflection" />
                                        <DoubleAnimation Duration="0:0:0.13" To="1" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" Storyboard.TargetName="BorderBackground" />
                                        <DoubleAnimation Duration="0:0:0.13" To="1" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" Storyboard.TargetName="ImageReflection" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOverState">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.2" To="1.02" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="BorderBackground" />
                                        <DoubleAnimation Duration="0:0:0.2" To="1.02" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="ImageReflection" />
                                        <DoubleAnimation Duration="0:0:0.2" To="1.02" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" Storyboard.TargetName="BorderBackground" />
                                        <DoubleAnimation Duration="0:0:0.2" To="1.02" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" Storyboard.TargetName="ImageReflection" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Canvas x:Name="CanvasReflection" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="0,0,0,0">
                            <Image x:Name="ImageReflection" Stretch="None" Canvas.Top="30" >
                                <Image.Projection>
                                    <PlaneProjection CenterOfRotationY="1" RotationX="180"/>
                                </Image.Projection>
                                <Image.RenderTransform>
                                    <CompositeTransform/>
                                </Image.RenderTransform>
                                <Image.OpacityMask>
                                    <LinearGradientBrush StartPoint="0.0,1.0" EndPoint="0.0,0.0">
                                        <GradientStop Offset="0" Color="#80000000" />
                                        <GradientStop Offset="0.06" Color="#00000000" />
                                    </LinearGradientBrush>
                                </Image.OpacityMask>
                            </Image>
                        </Canvas>

                        <Border x:Name="BorderBackground" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Background="{TemplateBinding Background}" 
                                CornerRadius="16,0,16,0" Margin="0,20,0,60" RenderTransformOrigin="0.5,0.5">
                            <Border.RenderTransform>
                                <CompositeTransform />
                            </Border.RenderTransform>
                            <Border.Projection>
                                <PlaneProjection/>
                            </Border.Projection>
                            <Grid>
                                <Border x:Name="BorderCenter" Background="{TemplateBinding HeaderBackground}" CornerRadius="15,0,0,0" BorderThickness="0" Height="80"
                                        VerticalAlignment="Top" RenderTransformOrigin="0.5,0.5">
                                    <Border.RenderTransform>
                                        <CompositeTransform/>
                                    </Border.RenderTransform>
                                    <Border.Projection>
                                        <PlaneProjection/>
                                    </Border.Projection>
                                    <Grid>
                                        <TextBlock x:Name="TextBlockCenterHeaderShadow" Text="Textblock" FontFamily="Segoe UI" FontSize="18" Foreground="{TemplateBinding HeaderForegroundShadow}" 
                                               Margin="11,6,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" />                                        
                                        <TextBlock x:Name="TextBlockCenterHeader" Text="Textblock" FontFamily="Segoe UI" FontSize="18" Foreground="{TemplateBinding HeaderForeground}" 
                                               Margin="10,5,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" />
                                    </Grid>
                                </Border>

                                <ContentPresenter x:Name="Content" Cursor="{TemplateBinding Cursor}" ContentTemplate="{TemplateBinding ContentTemplate}" 
                                      Content="{TemplateBinding Content}" HorizontalAlignment="Stretch" Margin="5,30,5,5" VerticalAlignment="Stretch"/>

                                <Border x:Name="BorderLeft"  Width="35" Margin="0,60,0,0" CornerRadius="15,0,0,0" Background="{TemplateBinding DisabledLeftHeaderBackground}"
                                        HorizontalAlignment="Left" VerticalAlignment="Stretch" Visibility="Collapsed" Opacity="0"/>

                                <Border x:Name="BorderRight"  Width="35" Margin="0,0,0,60" CornerRadius="0,0,15,0" Background="{TemplateBinding DisabledRightHeaderBackground}"
                                        HorizontalAlignment="Right" VerticalAlignment="Stretch" Visibility="Collapsed" Opacity="0"/>

                                <Canvas x:Name="CanvasLeft" HorizontalAlignment="Left" Height="0" VerticalAlignment="Bottom" Width="0" Margin="5,0,0,10" Visibility="Collapsed" Opacity="0">
                                    <TextBlock x:Name="TextBlockLeftHeader" Text="Textblock" FontFamily="Segoe UI" FontSize="22" Foreground="{TemplateBinding DisabledHeaderForeground}" 
                                               Margin="0" RenderTransformOrigin="1,1" TextAlignment="Right" >
						                <TextBlock.RenderTransform>
							                <CompositeTransform Rotation="270"/>
						                </TextBlock.RenderTransform>
                                    </TextBlock>
                                </Canvas>

                                <Canvas x:Name="CanvasRight" Width="0" Height="0" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,10,5,0" Visibility="Collapsed" Opacity="0">
                                    <TextBlock x:Name="TextBlockRightHeader" Text="Textblock" FontFamily="Segoe UI" FontSize="22" Foreground="{TemplateBinding DisabledHeaderForeground}" 
                                               Margin="0" RenderTransformOrigin="1,0">
						                <TextBlock.RenderTransform>
							                <CompositeTransform Rotation="90"/>
						                </TextBlock.RenderTransform>
                                        <TextBlock.Effect>
                                            <DropShadowEffect BlurRadius="4" Color="#FFFFFFFF" Direction="0" Opacity="1" ShadowDepth="3" />
                                        </TextBlock.Effect>
                                    </TextBlock>
                                </Canvas>

                                <Border x:Name="BorderOffCenterEffect" Background="Transparent" Visibility="Collapsed" CornerRadius="2" Opacity="1" />

                            </Grid>
                        </Border>


                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:RotatingPanelHost">
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <Canvas />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="toolkit:HeaderedContentControl">
        <Setter Property="Foreground" Value="#FF000000"/>
        <!-- <Setter Property="FontSize" Value="11" /> -->
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="toolkit:HeaderedContentControl">
                    <StackPanel>
                        <ContentPresenter
                            Content="{TemplateBinding Header}"
                            ContentTemplate="{TemplateBinding HeaderTemplate}"
                            Cursor="{TemplateBinding Cursor}"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        <ContentPresenter
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            Cursor="{TemplateBinding Cursor}"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
